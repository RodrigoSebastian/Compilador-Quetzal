PROGRAM -> DELI
DELI -> DELI DEF
DELI -> ''
DEF -> VADE
DEF -> FUDE
VADE -> var VALI ;
VALI -> IDLI
IDLI -> ID IDLICO
IDLICO -> , ID IDLICO
IDLICO -> ''
FUDE -> ID ( PALI ) { VADELI STLI }
PALI -> IDLI
PALI -> ''
VADELI -> VADELI VADE
VADELI -> ''
STLI -> STLI STMT
STLI -> ''
STMT -> STAS
STMT -> STIN
STMT -> STDE
STMT -> STFUCA
STMT -> STIF
STMT -> STLO
STMT -> STBR
STMT -> STRE
STMT -> STEM
STAS -> ID = EXPR ;
STIN -> inc ID ;
STDE -> dec ID ;
STFUCA -> FUCA ;
FUCA -> ID ( EXLI )
EXLI -> EXPR EXLICO
EXLI -> ''
EXLICO -> , EXPR EXLICO
EXLICO -> ''
STIF -> if ( EXPR ) { STLI } ELIFLI ELSE
ELIFLI -> ELIFLI elif ( EXPR ) { STLI }
ELIFLI -> ''
ELSE -> else { STLI }
ELSE -> ''
STLO -> loop { STLI }
STBR -> break ;
STRE -> return EXPR ;
STEM -> ;
EXPR -> EXOR
EXOR -> EXOR or EXAN
EXOR -> EXAN
EXAN -> EXAN and EXCO
EXAN -> EXCO
EXCO -> EXCO OPCO EXRE
EXCO -> EXRE
OPCO -> ==
OPCO -> !=
EXRE -> EXRE OPREL EXADD
EXRE -> EXADD
OPREL -> <
OPREL -> <=
OPREL -> >
OPREL -> >=
EXADD -> EXADD OPADD EXMUL
EXADD -> EXMUL
OPADD -> +
OPADD -> −
EXMUL -> EXMUL OPMUL EXUN
EXMUL -> EXUN
OPMUL -> *
OPMUL -> /
OPMUL -> %
EXUN -> OPUN EXUN
EXUN -> EXPRIM
OPUN -> +
OPUN -> −
OPUN -> not
EXPRIM -> ID
EXPRIM -> FUCA
EXPRIM -> ARRAY
EXPRIM -> LIT
EXPRIM -> ( EXPR )
ARRAY -> [ EXLI ]
LIT -> LIBO
LIT -> LIIN
LIT -> LICH
LIT -> LISTR